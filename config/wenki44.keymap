/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt {
    quick-tap-ms = <180>;
    flavor = "balanced";
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {
    combos {
        compatible = "zmk,combos";

        adj_l {
            bindings = <&lt 3 ESCAPE>;
            key-positions = <40 39>;
        };

        adj_r {
            bindings = <&lt 3 ESCAPE>;
            key-positions = <41 42>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp RG(RC(RS(NUMBER_4)))  &kp TAB     &kp Q               &kp W           &kp E        &kp R        &kp T            &kp Y          &kp U        &kp I        &kp O           &kp P               &kp LBKT       &kp RIGHT_BRACKET
                          &kp ESCAPE  &mt LEFT_COMMAND A  &mt LEFT_ALT S  &mt LCTRL D  &mt LSHFT F  &kp G            &kp H          &mt RSHFT J  &mt RCTRL K  &mt LEFT_ALT L  &mt RGUI SEMICOLON  &kp SQT
                          &kp GRAVE   &kp Z               &kp X           &kp C        &kp V        &kp B            &kp N          &kp M        &kp COMMA    &kp DOT         &kp FSLH            &kp BACKSLASH
                                                                          &lt 2 ENTER  &lt 1 SPACE  &kp BACKSPACE    &kp BACKSPACE  &lt 1 SPACE  &lt 2 ENTER
            >;
        };

        Low {
            bindings = <
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7                &kp N8                 &kp N9           &kp N0    &kp MINUS  &kp EQUAL
        &trans     &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN_ARROW        &kp UP_ARROW           &kp RIGHT_ARROW  &trans    &trans
        &trans     &trans  &trans  &trans  &trans  &trans    &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE   &kp PLUS  &trans
                                   &trans  &trans  &trans    &trans    &trans                &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS        &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER  &kp PLUS
        &trans     &trans    &trans  &trans    &trans      &trans         &trans     &kp MINUS       &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
        &trans     &trans    &trans  &trans    &trans      &trans         &trans     &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                     &trans    &trans      &trans         &trans     &trans          &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                     &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 3>;
            then-layer = <3>;
        };
    };
};
